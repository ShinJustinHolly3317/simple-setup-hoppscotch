{
 "Resources": {
  "ArtifactBucket7410C9EF": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/ArtifactBucket/Resource"
   }
  },
  "ArtifactBucketPolicy4B4B7752": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ArtifactBucket7410C9EF"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactBucket7410C9EF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactBucket7410C9EF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/ArtifactBucket/Policy/Resource"
   }
  },
  "ArtifactBucketAutoDeleteObjectsCustomResource0BB47FD6": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "ArtifactBucket7410C9EF"
    }
   },
   "DependsOn": [
    "ArtifactBucketPolicy4B4B7752"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/ArtifactBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-258248337883-us-east-1",
     "S3Key": "2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "ArtifactBucket7410C9EF"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4",
    "aws:asset:property": "Code"
   }
  },
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/Resource"
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet1/Subnet"
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet1/RouteTable"
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet1/EIP"
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677"
   ],
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet1/NATGateway"
   }
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet2/Subnet"
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet2/RouteTable"
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "VpcPublicSubnet2EIP3C605A87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet2/EIP"
   }
  },
  "VpcPublicSubnet2NATGateway9182C01D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet2EIP3C605A87",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ],
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PublicSubnet2/NATGateway"
   }
  },
  "VpcPrivateSubnet1Subnet536B997A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PrivateSubnet1/Subnet"
   }
  },
  "VpcPrivateSubnet1RouteTableB2C5B500": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PrivateSubnet1/RouteTable"
   }
  },
  "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "VpcPrivateSubnet2Subnet3788AAA1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PrivateSubnet2/Subnet"
   }
  },
  "VpcPrivateSubnet2RouteTableA678073B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PrivateSubnet2/RouteTable"
   }
  },
  "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet2DefaultRoute060D2087": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/IGW"
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Vpc/VPCGW"
   }
  },
  "InstanceInstanceSecurityGroupF0E2D5BE": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "CicdInfraStack/Instance/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Instance"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Instance/InstanceSecurityGroup/Resource"
   }
  },
  "InstanceInstanceRoleE9785DE5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Instance"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Instance/InstanceRole/Resource"
   }
  },
  "InstanceInstanceRoleDefaultPolicy4ACE9290": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactBucket7410C9EF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactBucket7410C9EF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstanceInstanceRoleDefaultPolicy4ACE9290",
    "Roles": [
     {
      "Ref": "InstanceInstanceRoleE9785DE5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Instance/InstanceRole/DefaultPolicy/Resource"
   }
  },
  "InstanceInstanceProfileAB5AEF02": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "InstanceInstanceRoleE9785DE5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Instance/InstanceProfile"
   }
  },
  "InstanceC1063A87": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "IamInstanceProfile": {
     "Ref": "InstanceInstanceProfileAB5AEF02"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "InstanceInstanceSecurityGroupF0E2D5BE",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CicdInfraStack/Instance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\n#!/bin/bash\n       yum update -y\n       yum install -y ruby\n       yum install -y wget\n       cd /home/ec2-user\n       wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install\n       chmod +x ./install\n       ./install auto\n       service codedeploy-agent start\n       \n       # Install Docker\n       yum install -y docker\n       service docker start\n       usermod -aG docker ec2-user\n\n       # Install Docker Compose\n       curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n       chmod +x /usr/local/bin/docker-compose\n      "
    }
   },
   "DependsOn": [
    "InstanceInstanceRoleDefaultPolicy4ACE9290",
    "InstanceInstanceRoleE9785DE5"
   ],
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Instance/Resource"
   }
  },
  "CodeDeployApplicationE587C27C": {
   "Type": "AWS::CodeDeploy::Application",
   "Properties": {
    "ApplicationName": "hoppscotchCicd",
    "ComputePlatform": "Server"
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/CodeDeployApplication/Resource"
   }
  },
  "DeploymentGroupRoleC40B98DA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codedeploy.us-east-1.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSCodeDeployRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/DeploymentGroup/Role/Resource"
   }
  },
  "DeploymentGroup6D277AF0": {
   "Type": "AWS::CodeDeploy::DeploymentGroup",
   "Properties": {
    "ApplicationName": {
     "Ref": "CodeDeployApplicationE587C27C"
    },
    "AutoRollbackConfiguration": {
     "Enabled": true,
     "Events": [
      "DEPLOYMENT_FAILURE"
     ]
    },
    "DeploymentConfigName": "CodeDeployDefault.AllAtOnce",
    "DeploymentGroupName": "hoppscotchCicdDeploymentGroup",
    "Ec2TagSet": {
     "Ec2TagSetList": [
      {
       "Ec2TagGroup": [
        {
         "Key": "Name",
         "Type": "KEY_AND_VALUE",
         "Value": "hoppscotchTargetEc2"
        }
       ]
      }
     ]
    },
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "DeploymentGroupRoleC40B98DA",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/DeploymentGroup/Resource"
   }
  },
  "hoppscotchRepo6CD78C38": {
   "Type": "AWS::CodeCommit::Repository",
   "Properties": {
    "RepositoryName": "test-justin-hoppscotch"
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/hoppscotchRepo/Resource"
   }
  },
  "hoppscotchRepoCicdInfraStackPipeline60B78372EventRule1C715FCD": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.codecommit"
     ],
     "resources": [
      {
       "Fn::GetAtt": [
        "hoppscotchRepo6CD78C38",
        "Arn"
       ]
      }
     ],
     "detail-type": [
      "CodeCommit Repository State Change"
     ],
     "detail": {
      "event": [
       "referenceCreated",
       "referenceUpdated"
      ],
      "referenceName": [
       "master"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":codepipeline:us-east-1:258248337883:",
         {
          "Ref": "PipelineC660917D"
         }
        ]
       ]
      },
      "Id": "Target0",
      "RoleArn": {
       "Fn::GetAtt": [
        "PipelineEventsRole46BEEA7C",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/hoppscotchRepo/CicdInfraStackPipeline60B78372EventRule/Resource"
   }
  },
  "PipelineRoleD68726F7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Pipeline/Role/Resource"
   }
  },
  "PipelineRoleDefaultPolicyC7A05455": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactBucket7410C9EF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactBucket7410C9EF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineSourcehoppscotchCodecommitSourceCodePipelineActionRole64A8DF03",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineRoleDefaultPolicyC7A05455",
    "Roles": [
     {
      "Ref": "PipelineRoleD68726F7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "PipelineC660917D": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "ArtifactStore": {
     "Location": {
      "Ref": "ArtifactBucket7410C9EF"
     },
     "Type": "S3"
    },
    "Name": "hoppscotchCicdPipeline",
    "RoleArn": {
     "Fn::GetAtt": [
      "PipelineRoleD68726F7",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "AWS",
         "Provider": "CodeCommit",
         "Version": "1"
        },
        "Configuration": {
         "RepositoryName": {
          "Fn::GetAtt": [
           "hoppscotchRepo6CD78C38",
           "Name"
          ]
         },
         "BranchName": "master",
         "PollForSourceChanges": false
        },
        "Name": "hoppscotchCodecommitSource",
        "OutputArtifacts": [
         {
          "Name": "Artifact_Source_hoppscotchCodecommitSource"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineSourcehoppscotchCodecommitSourceCodePipelineActionRole64A8DF03",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "CodeDeploy",
         "Version": "1"
        },
        "Configuration": {
         "ApplicationName": {
          "Ref": "CodeDeployApplicationE587C27C"
         },
         "DeploymentGroupName": {
          "Ref": "DeploymentGroup6D277AF0"
         }
        },
        "InputArtifacts": [
         {
          "Name": "Artifact_Source_hoppscotchCodecommitSource"
         }
        ],
        "Name": "CodeDeploy",
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Deploy"
     }
    ]
   },
   "DependsOn": [
    "PipelineRoleDefaultPolicyC7A05455",
    "PipelineRoleD68726F7"
   ],
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Pipeline/Resource"
   }
  },
  "PipelineSourcehoppscotchCodecommitSourceCodePipelineActionRole64A8DF03": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::258248337883:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Pipeline/Source/hoppscotchCodecommitSource/CodePipelineActionRole/Resource"
   }
  },
  "PipelineSourcehoppscotchCodecommitSourceCodePipelineActionRoleDefaultPolicy9ADA4E2B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactBucket7410C9EF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactBucket7410C9EF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codecommit:GetBranch",
        "codecommit:GetCommit",
        "codecommit:UploadArchive",
        "codecommit:GetUploadArchiveStatus",
        "codecommit:CancelUploadArchive"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "hoppscotchRepo6CD78C38",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineSourcehoppscotchCodecommitSourceCodePipelineActionRoleDefaultPolicy9ADA4E2B",
    "Roles": [
     {
      "Ref": "PipelineSourcehoppscotchCodecommitSourceCodePipelineActionRole64A8DF03"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Pipeline/Source/hoppscotchCodecommitSource/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "PipelineEventsRole46BEEA7C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Pipeline/EventsRole/Resource"
   }
  },
  "PipelineEventsRoleDefaultPolicyFF4FCCE0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codepipeline:StartPipelineExecution",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codepipeline:us-east-1:258248337883:",
          {
           "Ref": "PipelineC660917D"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineEventsRoleDefaultPolicyFF4FCCE0",
    "Roles": [
     {
      "Ref": "PipelineEventsRole46BEEA7C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Pipeline/EventsRole/DefaultPolicy/Resource"
   }
  },
  "PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::258248337883:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Pipeline/Deploy/CodeDeploy/CodePipelineActionRole/Resource"
   }
  },
  "PipelineDeployCodeDeployCodePipelineActionRoleDefaultPolicy7B34E673": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codedeploy:GetApplicationRevision",
        "codedeploy:RegisterApplicationRevision"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codedeploy:us-east-1:258248337883:application:",
          {
           "Ref": "CodeDeployApplicationE587C27C"
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "codedeploy:CreateDeployment",
        "codedeploy:GetDeployment"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codedeploy:us-east-1:258248337883:deploymentgroup:",
          {
           "Ref": "CodeDeployApplicationE587C27C"
          },
          "/",
          {
           "Ref": "DeploymentGroup6D277AF0"
          }
         ]
        ]
       }
      },
      {
       "Action": "codedeploy:GetDeploymentConfig",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codedeploy:us-east-1:258248337883:deploymentconfig:CodeDeployDefault.AllAtOnce"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ArtifactBucket7410C9EF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ArtifactBucket7410C9EF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineDeployCodeDeployCodePipelineActionRoleDefaultPolicy7B34E673",
    "Roles": [
     {
      "Ref": "PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/Pipeline/Deploy/CodeDeploy/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11S227CMAz9Ft5DBh0/AGxCvExVmXid0tQwQ5tUuRRVVf99btML48nHJ8fOcZyIrzcRXy/Ewy5ldl/mmPLm5IS8M6J+GvvOm52Xd3Bsf1EDCiHWOcp6poc8JDthoWUgI96cS9mJzvGexT4lzcmnKvSbUaK9g2+R5jDzM7e1VksUDrWaxB34PMZd+BLuIBw8RM1igxXBufFROTCER0FwMmRbR5P+FqAcOyrrhJLATiC9QVcfjPZlb+aVGKUtQ1HwJtHBdB/nR5nRqI+NvmBOZVJnkEGZ65reGkwFZluWpJ4GfE6D4KOXd04nGy9UaCt1UaAjU1Bqi06b3sGc0U4qqrCk8INtP1oqsYQcFfAmHlA/x4Dblu29dbpIwGpvZCie8L8jmrTCDEz3CxgtDxx9qSuqK3sujoURBdB6Wqboen6zb1W04hu+Wtws4tJ45bAAnoT4B+6lsdOrAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "CicdInfraStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}